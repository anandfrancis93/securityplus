@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: #0a0a0a;
  --foreground: #ededed;
}

body {
  color: var(--foreground);
  background: var(--background);
  font-family: Arial, Helvetica, sans-serif;
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }

  /* Physics-based spring animations */
  @keyframes spring-in {
    0% {
      opacity: 0;
      transform: scale(0.8);
    }
    50% {
      transform: scale(1.05);
    }
    100% {
      opacity: 1;
      transform: scale(1);
    }
  }

  @keyframes spring-bounce {
    0%, 100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-10px);
    }
  }

  @keyframes elastic-scale {
    0% {
      transform: scale(1);
    }
    30% {
      transform: scale(1.1);
    }
    50% {
      transform: scale(0.95);
    }
    70% {
      transform: scale(1.02);
    }
    100% {
      transform: scale(1);
    }
  }

  @keyframes slide-up-spring {
    0% {
      opacity: 0;
      transform: translateY(30px);
    }
    60% {
      transform: translateY(-5px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes slide-down-spring {
    0% {
      opacity: 0;
      transform: translateY(-30px);
    }
    60% {
      transform: translateY(5px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes ripple {
    0% {
      transform: scale(0);
      opacity: 0.6;
    }
    100% {
      transform: scale(4);
      opacity: 0;
    }
  }

  /* Celebration animations */
  @keyframes fade-in {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @keyframes scale-in {
    from {
      opacity: 0;
      transform: scale(0.9);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }

  /* Spring animation classes */
  .animate-spring-in {
    animation: spring-in 0.6s cubic-bezier(0.34, 1.56, 0.64, 1);
  }

  .animate-spring-bounce {
    animation: spring-bounce 0.6s cubic-bezier(0.34, 1.56, 0.64, 1) infinite;
  }

  .animate-elastic {
    animation: elastic-scale 0.8s cubic-bezier(0.34, 1.56, 0.64, 1);
  }

  .animate-slide-up-spring {
    animation: slide-up-spring 0.5s cubic-bezier(0.34, 1.56, 0.64, 1);
  }

  .animate-slide-down-spring {
    animation: slide-down-spring 0.5s cubic-bezier(0.34, 1.56, 0.64, 1);
  }

  .animate-fade-in {
    animation: fade-in 0.3s ease-out;
  }

  .animate-scale-in {
    animation: scale-in 0.4s ease-out;
  }

  /* Spring-based transitions */
  .transition-spring {
    transition: all 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
  }

  .transition-spring-fast {
    transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
  }

  .transition-spring-slow {
    transition: all 0.6s cubic-bezier(0.34, 1.56, 0.64, 1);
  }

  /* Button press effect */
  .active-press {
    transform: scale(0.95);
    transition: transform 0.1s cubic-bezier(0.34, 1.56, 0.64, 1);
  }

  /* Ripple effect for tap feedback */
  .ripple-container {
    position: relative;
    overflow: hidden;
  }

  .ripple-effect {
    position: absolute;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.5);
    pointer-events: none;
    animation: ripple 0.6s ease-out;
  }

  /* Smooth hover effects */
  .hover-lift {
    transition: transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1), box-shadow 0.3s ease;
  }

  .hover-lift:hover {
    transform: translateY(-4px);
  }

  /* Card flip animation */
  @keyframes card-flip {
    0% {
      transform: rotateY(0deg);
    }
    50% {
      transform: rotateY(90deg);
    }
    100% {
      transform: rotateY(180deg);
    }
  }

  .animate-card-flip {
    animation: card-flip 0.6s cubic-bezier(0.34, 1.56, 0.64, 1);
  }
}
